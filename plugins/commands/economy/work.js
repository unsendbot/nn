const _6HOURS = 6 * 60 * 60 * 1000;
const _2HOURS = 2 * 60 * 60 * 1000;
const _3HOURS = 3 * 60 * 60 * 1000;
const _1HOURS = 1 * 60 * 60 * 1000;
const _30MINUTES = 30 * 60 * 1000;

const config = {
  name: "ุนูู",
  aliases: ["wk"],
  description: "ูู ุจุนูู ุนุดูุงุฆู ููุญุตูู ุนูู ุฐูุจ ๐ชุ ูุน ูุฑุตุฉ ูุฑุจุญ ุถุฎู ุฃู ุดุบู ูุญุดุด!",
  credits: "XaviaTeam + Muzan",
  extra: {
    min: 100,
    max: 700,
    rareMin: 10000,
    rareMax: 50000,
    rareChance: 3, // 3% ูุฑุตุฉ ูุงุฏุฑุฉ
    delay: [_30MINUTES, _1HOURS, _2HOURS, _3HOURS, _6HOURS]
  }
};

const langData = {
  "ar_SY": {
    "work.selfNoData": "๐ ุจูุงูุงุชู ุบูุฑ ุฌุงูุฒุฉ ุจุนุฏ.",
    "work.alreadyWorked": "โณ ููุฏ ุงุดุชุบูุชุ ุงุฑุฌุน ุจุนุฏ: {time}.",
    "work.successfullyWorked": "โ ุงุดุชุบูุช ูู \"{job}\" ูุฑุจุญุช {amount} ุฐูุจ ๐ช",
    "work.rareSuccess": "๐ฅ ูุฑุตุฉ ูุงุฏุฑุฉ! ุงุดุชุบูุช ูู \"{job}\" ูุฑุจุญุช {amount} ุฐูุจ ๐ช",
    "work.failed": "โ ูุดู ุฃุซูุงุก ุชูููุฐ ุงูุนูู."
  }
};

const jobs = [
  // 20 ูููุฉ ุนุงุฏูุฉ
  "ูุฒุงุฑุน", "ูุฌุงุฑ", "ุณุงุฆู ุชุงูุณู", "ุฎุจุงุฒ", "ููุฑุจุงุฆู", "ุญูุงู", "ุตุงุฆุบ ุฐูุจ", "ุณุงุฆู ุดุงุญูุฉ", "ุตูุฏูู", "ูุนูู", 
  "ุทุจูุจ", "ูููุฏุณ", "ุฌุฒุงุฑ", "ุตูุงุฏ", "ูุจุฑูุฌ", "ุจุงุฆุน ุฎุถุงุฑ", "ุนุงูู ุจูุงุก", "ูุฏุฑุจ ุฌูู", "ูุตูุฑ", "ุญุงุฑุณ ุฃูู",

  // 10 ููู ูุถุญูุฉ ููุญุดุดุฉ
  "ูุทุงุฑุฏ ูุฑุงุฎ ูู ุงูุณูู ๐", 
  "ูุฑุงูุจ ูู ูุฌููุนุฉ ูุงุชุณุงุจ ุณุงูุช ๐", 
  "ููุงู ุดุญุงุชุฉ ูุญุชุฑู ๐ญ", 
  "ุจุงุฆุน ููุงู ูุงุฑุบ ูู ุชููุชุฑ ๐ฆ", 
  "ุฎุฑุจุช ูุฑุญ ูุทูุนุช ุฃุฌุฑู ๐โโ๏ธ", 
  "ููุช ุฌูุจ ูุจุงูุฉ ุดุงู โ", 
  "ูุฑุงูุจ ุฎูุงูุงุชู ูู ุงูุญูุด ๐", 
  "ุฌุฑุจุช ุฃููู ุฐูู ุจุณ ุงูุดุจูุฉ ูุทุนุช ๐ถ", 
  "ุตุฑูุช ูุนุงุดู ุนูู PUBG ๐ธ", 
  "ุงุดุชุบูุช ูู ูุตูุญุฉ ูู ุญุงูุฉ ูุงุชุณุงุจ ๐ฌ"
];

async function onCall({ message, extra, getLang }) {
  const { Currencies } = global.controllers;
  const { min, max, rareMin, rareMax, rareChance, delay } = extra;

  try {
    const data = await Currencies.getData(message.senderID);
    if (!data) return message.reply(getLang("work.selfNoData"));

    if (!data.work) data.work = { lastWorked: 0, delay: 0 };
    const elapsed = Date.now() - data.work.lastWorked;

    if (elapsed < data.work.delay) {
      const remaining = global.msToHMS(data.work.delay - elapsed);
      return message.reply(getLang("work.alreadyWorked", { time: remaining }));
    }

    const isRare = Math.random() * 100 < rareChance;
    const amount = global.random(isRare ? rareMin : min, isRare ? rareMax : max);
    const job = jobs[Math.floor(Math.random() * jobs.length)];

    await Currencies.increaseGold(message.senderID, amount);

    data.work.lastWorked = Date.now();
    data.work.delay = delay[Math.floor(Math.random() * delay.length)];
    await Currencies.setData(message.senderID, data);

    const msgKey = isRare ? "work.rareSuccess" : "work.successfullyWorked";
    return message.reply(getLang(msgKey, {
      job,
      amount: global.addCommas(amount)
    }));
  } catch (err) {
    console.error(err);
    return message.reply(getLang("work.failed"));
  }
}

export default {
  config,
  langData,
  onCall
};
